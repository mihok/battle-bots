{"version":3,"sources":["../../build-tsc/robot/core.js"],"names":["Object","defineProperty","exports","value","initialState","health","power","Core","instance","subscribers","components","actions","state","subscribe","push","component","subscriber","subscribeToState","getMethods","componentName","action","dispatch","Error","type","TAKE_DAMAGE","assign","payload","HEAL","reducer","emitChange","i","length","TakeDamageAction","HealAction","core"],"mappings":"AAAA;;;;;;AACAA,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C,EAAEC,OAAO,IAAT,EAA7C;AACA,IAAMC,eAAe;AACjBC,YAAQ,GADS;AAEjBC,WAAO;AAFU,CAArB;;IAIMC,I;AACF,oBAAc;AAAA;;AACV,aAAKC,QAAL,GAAgB,IAAhB;AACA,aAAKC,WAAL,GAAmB,EAAnB;AACA,aAAKC,UAAL,GAAkB,EAAlB;AACA,aAAKC,OAAL,GAAe,EAAf;AACA,aAAKC,KAAL,GAAaR,YAAb;AACA,YAAI,KAAKI,QAAL,KAAkB,IAAtB,EACI,KAAKA,QAAL,GAAgB,IAAhB;AACP;;;;yCACgBK,S,EAAW;AACxB,iBAAKJ,WAAL,CAAiBK,IAAjB,CAAsBD,SAAtB;AACAA,sBAAU,KAAKD,KAAf;AACH;;;kDACyBG,S,EAAWC,U,EAAY;AAC7C,iBAAKN,UAAL,CAAgBK,SAAhB,EAA2BE,gBAA3B,CAA4CD,UAA5C;AACH;;;qCACY;AACT,mBAAO,KAAKL,OAAZ;AACH;;;wCACe;AACZ,mBAAO,KAAKD,UAAZ;AACH;;;4CACmBK,S,EAAW;AAC3B,mBAAO,KAAKL,UAAL,CAAgBK,SAAhB,EAA2BG,UAA3B,EAAP;AACH;;;gCACOC,a,EAAeC,M,EAAQ;AAC3B,gBAAI,KAAKV,UAAL,CAAgBS,aAAhB,CAAJ,EACI,KAAKT,UAAL,CAAgBS,aAAhB,EAA+BE,QAA/B,CAAwCD,MAAxC,EADJ,CACqD;AADrD,iBAGI,MAAM,IAAIE,KAAJ,gBAAuBH,aAAvB,sBAAN;AACP;;;gCACOP,K,EAAOQ,M,EAAQ;AACnB,oBAAQA,OAAOG,IAAf;AACI,qBAAKrB,QAAQsB,WAAb;AACI,2BAAOxB,OAAOyB,MAAP,CAAc,EAAd,EAAkB,KAAKb,KAAvB,EAA8B,EAAEP,QAAQ,KAAKO,KAAL,CAAWP,MAAX,GAAoBe,OAAOM,OAArC,EAA9B,CAAP;AACJ,qBAAKxB,QAAQyB,IAAb;AACI,2BAAO3B,OAAOyB,MAAP,CAAc,EAAd,EAAkB,KAAKb,KAAvB,EAA8B,EAAEP,QAAQ,KAAKO,KAAL,CAAWP,MAAX,GAAoBe,OAAOM,OAArC,EAA9B,CAAP;AAJR;AAMA,mBAAO,KAAKd,KAAZ;AACH;;;iCACQQ,M,EAAQ;AACb,iBAAKR,KAAL,GAAa,KAAKgB,OAAL,CAAa,KAAKhB,KAAlB,EAAyBQ,MAAzB,CAAb;AACA,iBAAKS,UAAL;AACH;;;qCACY;AACT,iBAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI,KAAKrB,WAAL,CAAiBsB,MAArC,EAA6CD,GAA7C,EAAkD;AAC9C,qBAAKrB,WAAL,CAAiBqB,CAAjB,EAAoB,KAAKlB,KAAzB;AACH;AACJ;;;;;AAEL;;;AACAV,QAAQsB,WAAR,GAAsB,oBAAtB;AACAtB,QAAQyB,IAAR,GAAe,aAAf;;IACMK,gB,GACF,4BAA0B;AAAA,QAAdN,OAAc,uEAAJ,EAAI;;AAAA;;AACtB,SAAKA,OAAL,GAAeA,OAAf;AACA,SAAKH,IAAL,GAAYrB,QAAQsB,WAApB;AACH,C;;AAELtB,QAAQ8B,gBAAR,GAA2BA,gBAA3B;;IACMC,U,GACF,sBAA0B;AAAA,QAAdP,OAAc,uEAAJ,EAAI;;AAAA;;AACtB,SAAKA,OAAL,GAAeA,OAAf;AACA,SAAKH,IAAL,GAAYrB,QAAQyB,IAApB;AACH,C;;AAELzB,QAAQ+B,UAAR,GAAqBA,UAArB;AACA/B,QAAQgC,IAAR,GAAe,IAAI3B,IAAJ,EAAf","file":"core.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst initialState = {\n    health: 100,\n    power: 100\n};\nclass Core {\n    constructor() {\n        this.instance = null;\n        this.subscribers = [];\n        this.components = {};\n        this.actions = [];\n        this.state = initialState;\n        if (this.instance === null)\n            this.instance = this;\n    }\n    subscribeToState(subscribe) {\n        this.subscribers.push(subscribe);\n        subscribe(this.state);\n    }\n    subscribeToComponentState(component, subscriber) {\n        this.components[component].subscribeToState(subscriber);\n    }\n    getActions() {\n        return this.actions;\n    }\n    getComponents() {\n        return this.components;\n    }\n    getComponentMethods(component) {\n        return this.components[component].getMethods();\n    }\n    command(componentName, action) {\n        if (this.components[componentName])\n            this.components[componentName].dispatch(action); // Invoke component command.\n        else\n            throw new Error(`Component ${componentName} does not exist.`);\n    }\n    reducer(state, action) {\n        switch (action.type) {\n            case exports.TAKE_DAMAGE:\n                return Object.assign({}, this.state, { health: this.state.health - action.payload });\n            case exports.HEAL:\n                return Object.assign({}, this.state, { health: this.state.health + action.payload });\n        }\n        return this.state;\n    }\n    dispatch(action) {\n        this.state = this.reducer(this.state, action);\n        this.emitChange();\n    }\n    emitChange() {\n        for (let i = 0; i < this.subscribers.length; i++) {\n            this.subscribers[i](this.state);\n        }\n    }\n}\n// Action names\nexports.TAKE_DAMAGE = '[Core] Take Damage';\nexports.HEAL = '[Core] Heal';\nclass TakeDamageAction {\n    constructor(payload = {}) {\n        this.payload = payload;\n        this.type = exports.TAKE_DAMAGE;\n    }\n}\nexports.TakeDamageAction = TakeDamageAction;\nclass HealAction {\n    constructor(payload = {}) {\n        this.payload = payload;\n        this.type = exports.HEAL;\n    }\n}\nexports.HealAction = HealAction;\nexports.core = new Core();\n"]}